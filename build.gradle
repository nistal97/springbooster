plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group 'org.springboot.initializer'
version '1.0-SNAPSHOT'
sourceCompatibility = '18'

jar {
    manifest {
        attributes(
                'Main-Class': 'org.springboot.initializer.Exporter'
        )
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    generated {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'com.squareup:javapoet:1.13.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2:2.7.2'
    implementation 'org.springframework.boot:spring-boot-starter-test:2.7.1'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'ch.vorburger.mariaDB4j:mariaDB4j-springboot:2.5.3'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.7'
    implementation 'org.junit.platform:junit-platform-suite-engine:1.8.2'

    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-core:5.0.0'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0'
    annotationProcessor 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
    annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/generated','src/main/java']
        }
    }
}

clean {
    delete file('src/main/generated')
}

task generateQueryDSLClasses (type: JavaCompile) {
    source = sourceSets.main.java
    classpath = configurations.runtimeClasspath
    options.annotationProcessorPath = sourceSets.main.annotationProcessorPath
    options.compilerArgs = ['-proc:only',
                            '-processor',
                            'com.querydsl.apt.jpa.JPAAnnotationProcessor',
                            '-Aquerydsl.excludedPackages=org.springboot.initializer']
    options.warnings = false
    destinationDir = file('src/main/generated')
    outputs.dir destinationDir

}


